class Solution {
public:
    int networkDelayTime(vector<vector<int>>& times, int n, int k) {
      unordered_map<int,vector<pair<int,int>>> adj;
      for(auto &vec:times){
        int u=vec[0];
        int v=vec[1];
        int w=vec[2];
        adj[u].push_back({v,w});//(u->{v,w})
      }      
      priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
      vector<int> result(n+1,INT_MAX);
      result[k]=0;
      pq.push({0,k});//(dist,node)
      while(!pq.empty()){
        int d=pq.top().first;
        int node=pq.top().second;
        pq.pop();//do not forget this line ,this missing shit was giving mw TLE and i was worried for a quite of time..
        for(auto &neigh:adj[node]){
            int neighNode=neigh.first;
            int neighDist=neigh.second;
            if(d+neighDist<result[neighNode]){
                result[neighNode]=d+neighDist;
                pq.push({d+neighDist,neighNode});
            }
        }
      }
      int ans=INT_MIN;
      for(int i=1;i<=n;i++){
        ans=max(ans,result[i]);
      }
        return ans==INT_MAX?-1:ans;
    }
};
